<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_value.proto

namespace Ydb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Ydb.VariantType</code>
 */
class VariantType extends \Google\Protobuf\Internal\Message
{
    protected $type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Ydb\TupleType $tuple_items
     *     @type \Ydb\StructType $struct_items
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbValue::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.Ydb.TupleType tuple_items = 1;</code>
     * @return \Ydb\TupleType|null
     */
    public function getTupleItems()
    {
        return $this->readOneof(1);
    }

    public function hasTupleItems()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.Ydb.TupleType tuple_items = 1;</code>
     * @param \Ydb\TupleType $var
     * @return $this
     */
    public function setTupleItems($var)
    {
        GPBUtil::checkMessage($var, \Ydb\TupleType::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Ydb.StructType struct_items = 2;</code>
     * @return \Ydb\StructType|null
     */
    public function getStructItems()
    {
        return $this->readOneof(2);
    }

    public function hasStructItems()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.Ydb.StructType struct_items = 2;</code>
     * @param \Ydb\StructType $var
     * @return $this
     */
    public function setStructItems($var)
    {
        GPBUtil::checkMessage($var, \Ydb\StructType::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->whichOneof("type");
    }

}

