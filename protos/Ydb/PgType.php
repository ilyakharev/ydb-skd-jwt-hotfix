<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_value.proto

namespace Ydb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Ydb.PgType</code>
 */
class PgType extends \Google\Protobuf\Internal\Message
{
    /**
     * pg object id of the type
     * full registry could be found here: https://github.com/postgres/postgres/blob/master/src/include/catalog/pg_type.dat
     *
     * Generated from protobuf field <code>uint32 oid = 1;</code>
     */
    protected $oid = 0;
    /**
     * advanced type details useful for pg wire format proxying
     *
     * Generated from protobuf field <code>int32 typlen = 2;</code>
     */
    protected $typlen = 0;
    /**
     * optional, set to 0 by default
     *
     * Generated from protobuf field <code>int32 typmod = 3;</code>
     */
    protected $typmod = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $oid
     *           pg object id of the type
     *           full registry could be found here: https://github.com/postgres/postgres/blob/master/src/include/catalog/pg_type.dat
     *     @type int $typlen
     *           advanced type details useful for pg wire format proxying
     *     @type int $typmod
     *           optional, set to 0 by default
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbValue::initOnce();
        parent::__construct($data);
    }

    /**
     * pg object id of the type
     * full registry could be found here: https://github.com/postgres/postgres/blob/master/src/include/catalog/pg_type.dat
     *
     * Generated from protobuf field <code>uint32 oid = 1;</code>
     * @return int
     */
    public function getOid()
    {
        return $this->oid;
    }

    /**
     * pg object id of the type
     * full registry could be found here: https://github.com/postgres/postgres/blob/master/src/include/catalog/pg_type.dat
     *
     * Generated from protobuf field <code>uint32 oid = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setOid($var)
    {
        GPBUtil::checkUint32($var);
        $this->oid = $var;

        return $this;
    }

    /**
     * advanced type details useful for pg wire format proxying
     *
     * Generated from protobuf field <code>int32 typlen = 2;</code>
     * @return int
     */
    public function getTyplen()
    {
        return $this->typlen;
    }

    /**
     * advanced type details useful for pg wire format proxying
     *
     * Generated from protobuf field <code>int32 typlen = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setTyplen($var)
    {
        GPBUtil::checkInt32($var);
        $this->typlen = $var;

        return $this;
    }

    /**
     * optional, set to 0 by default
     *
     * Generated from protobuf field <code>int32 typmod = 3;</code>
     * @return int
     */
    public function getTypmod()
    {
        return $this->typmod;
    }

    /**
     * optional, set to 0 by default
     *
     * Generated from protobuf field <code>int32 typmod = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setTypmod($var)
    {
        GPBUtil::checkInt32($var);
        $this->typmod = $var;

        return $this;
    }

}

