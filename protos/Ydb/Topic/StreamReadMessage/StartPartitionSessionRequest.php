<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_topic.proto

namespace Ydb\Topic\StreamReadMessage;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Command from server to create and start a partition session.
 * Client must respond with StartPartitionSessionResponse when ready to receive data from this partition.
 *
 * Generated from protobuf message <code>Ydb.Topic.StreamReadMessage.StartPartitionSessionRequest</code>
 */
class StartPartitionSessionRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Partition session description.
     *
     * Generated from protobuf field <code>.Ydb.Topic.StreamReadMessage.PartitionSession partition_session = 1;</code>
     */
    protected $partition_session = null;
    /**
     * Each offset up to and including (committed_offset - 1) was fully processed.
     *
     * Generated from protobuf field <code>int64 committed_offset = 2;</code>
     */
    protected $committed_offset = 0;
    /**
     * Partition contains messages with offsets in range [start, end).
     *
     * Generated from protobuf field <code>.Ydb.Topic.OffsetsRange partition_offsets = 3;</code>
     */
    protected $partition_offsets = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Ydb\Topic\StreamReadMessage\PartitionSession $partition_session
     *           Partition session description.
     *     @type int|string $committed_offset
     *           Each offset up to and including (committed_offset - 1) was fully processed.
     *     @type \Ydb\Topic\OffsetsRange $partition_offsets
     *           Partition contains messages with offsets in range [start, end).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbTopic::initOnce();
        parent::__construct($data);
    }

    /**
     * Partition session description.
     *
     * Generated from protobuf field <code>.Ydb.Topic.StreamReadMessage.PartitionSession partition_session = 1;</code>
     * @return \Ydb\Topic\StreamReadMessage\PartitionSession|null
     */
    public function getPartitionSession()
    {
        return $this->partition_session;
    }

    public function hasPartitionSession()
    {
        return isset($this->partition_session);
    }

    public function clearPartitionSession()
    {
        unset($this->partition_session);
    }

    /**
     * Partition session description.
     *
     * Generated from protobuf field <code>.Ydb.Topic.StreamReadMessage.PartitionSession partition_session = 1;</code>
     * @param \Ydb\Topic\StreamReadMessage\PartitionSession $var
     * @return $this
     */
    public function setPartitionSession($var)
    {
        GPBUtil::checkMessage($var, \Ydb\Topic\StreamReadMessage\PartitionSession::class);
        $this->partition_session = $var;

        return $this;
    }

    /**
     * Each offset up to and including (committed_offset - 1) was fully processed.
     *
     * Generated from protobuf field <code>int64 committed_offset = 2;</code>
     * @return int|string
     */
    public function getCommittedOffset()
    {
        return $this->committed_offset;
    }

    /**
     * Each offset up to and including (committed_offset - 1) was fully processed.
     *
     * Generated from protobuf field <code>int64 committed_offset = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCommittedOffset($var)
    {
        GPBUtil::checkInt64($var);
        $this->committed_offset = $var;

        return $this;
    }

    /**
     * Partition contains messages with offsets in range [start, end).
     *
     * Generated from protobuf field <code>.Ydb.Topic.OffsetsRange partition_offsets = 3;</code>
     * @return \Ydb\Topic\OffsetsRange|null
     */
    public function getPartitionOffsets()
    {
        return $this->partition_offsets;
    }

    public function hasPartitionOffsets()
    {
        return isset($this->partition_offsets);
    }

    public function clearPartitionOffsets()
    {
        unset($this->partition_offsets);
    }

    /**
     * Partition contains messages with offsets in range [start, end).
     *
     * Generated from protobuf field <code>.Ydb.Topic.OffsetsRange partition_offsets = 3;</code>
     * @param \Ydb\Topic\OffsetsRange $var
     * @return $this
     */
    public function setPartitionOffsets($var)
    {
        GPBUtil::checkMessage($var, \Ydb\Topic\OffsetsRange::class);
        $this->partition_offsets = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(StartPartitionSessionRequest::class, \Ydb\Topic\StreamReadMessage_StartPartitionSessionRequest::class);

