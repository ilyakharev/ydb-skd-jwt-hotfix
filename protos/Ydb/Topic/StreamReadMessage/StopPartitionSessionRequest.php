<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_topic.proto

namespace Ydb\Topic\StreamReadMessage;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Command from server to stop and destroy concrete partition session.
 *
 * Generated from protobuf message <code>Ydb.Topic.StreamReadMessage.StopPartitionSessionRequest</code>
 */
class StopPartitionSessionRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier of partition session that is ready to be closed by server.
     *
     * Generated from protobuf field <code>int64 partition_session_id = 1;</code>
     */
    protected $partition_session_id = 0;
    /**
     * Flag of graceful stop.
     * If set, server will wait for response from client before giving this partition to other read session.
     * Server will not send more data from this partition.
     * Client can process all received data and wait for commit and only after send response.
     * If False then server gives partition for other session right now.
     * All further commits for this partition session has no effect. Server is not waiting for response.
     *
     * Generated from protobuf field <code>bool graceful = 2;</code>
     */
    protected $graceful = false;
    /**
     * Upper bound for committed offsets.
     *
     * Generated from protobuf field <code>int64 committed_offset = 3;</code>
     */
    protected $committed_offset = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $partition_session_id
     *           Identifier of partition session that is ready to be closed by server.
     *     @type bool $graceful
     *           Flag of graceful stop.
     *           If set, server will wait for response from client before giving this partition to other read session.
     *           Server will not send more data from this partition.
     *           Client can process all received data and wait for commit and only after send response.
     *           If False then server gives partition for other session right now.
     *           All further commits for this partition session has no effect. Server is not waiting for response.
     *     @type int|string $committed_offset
     *           Upper bound for committed offsets.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbTopic::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier of partition session that is ready to be closed by server.
     *
     * Generated from protobuf field <code>int64 partition_session_id = 1;</code>
     * @return int|string
     */
    public function getPartitionSessionId()
    {
        return $this->partition_session_id;
    }

    /**
     * Identifier of partition session that is ready to be closed by server.
     *
     * Generated from protobuf field <code>int64 partition_session_id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPartitionSessionId($var)
    {
        GPBUtil::checkInt64($var);
        $this->partition_session_id = $var;

        return $this;
    }

    /**
     * Flag of graceful stop.
     * If set, server will wait for response from client before giving this partition to other read session.
     * Server will not send more data from this partition.
     * Client can process all received data and wait for commit and only after send response.
     * If False then server gives partition for other session right now.
     * All further commits for this partition session has no effect. Server is not waiting for response.
     *
     * Generated from protobuf field <code>bool graceful = 2;</code>
     * @return bool
     */
    public function getGraceful()
    {
        return $this->graceful;
    }

    /**
     * Flag of graceful stop.
     * If set, server will wait for response from client before giving this partition to other read session.
     * Server will not send more data from this partition.
     * Client can process all received data and wait for commit and only after send response.
     * If False then server gives partition for other session right now.
     * All further commits for this partition session has no effect. Server is not waiting for response.
     *
     * Generated from protobuf field <code>bool graceful = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setGraceful($var)
    {
        GPBUtil::checkBool($var);
        $this->graceful = $var;

        return $this;
    }

    /**
     * Upper bound for committed offsets.
     *
     * Generated from protobuf field <code>int64 committed_offset = 3;</code>
     * @return int|string
     */
    public function getCommittedOffset()
    {
        return $this->committed_offset;
    }

    /**
     * Upper bound for committed offsets.
     *
     * Generated from protobuf field <code>int64 committed_offset = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCommittedOffset($var)
    {
        GPBUtil::checkInt64($var);
        $this->committed_offset = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(StopPartitionSessionRequest::class, \Ydb\Topic\StreamReadMessage_StopPartitionSessionRequest::class);

