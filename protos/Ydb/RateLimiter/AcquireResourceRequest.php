<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_rate_limiter.proto

namespace Ydb\RateLimiter;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Ydb.RateLimiter.AcquireResourceRequest</code>
 */
class AcquireResourceRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.Ydb.Operations.OperationParams operation_params = 1;</code>
     */
    protected $operation_params = null;
    /**
     * Path of a coordination node.
     *
     * Generated from protobuf field <code>string coordination_node_path = 2;</code>
     */
    protected $coordination_node_path = '';
    /**
     * Path of resource inside a coordination node.
     *
     * Generated from protobuf field <code>string resource_path = 3;</code>
     */
    protected $resource_path = '';
    protected $units;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Ydb\Operations\OperationParams $operation_params
     *     @type string $coordination_node_path
     *           Path of a coordination node.
     *     @type string $resource_path
     *           Path of resource inside a coordination node.
     *     @type int|string $required
     *           Request resource's units for usage.
     *     @type int|string $used
     *           Actually used resource's units by client.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbRateLimiter::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.Ydb.Operations.OperationParams operation_params = 1;</code>
     * @return \Ydb\Operations\OperationParams|null
     */
    public function getOperationParams()
    {
        return $this->operation_params;
    }

    public function hasOperationParams()
    {
        return isset($this->operation_params);
    }

    public function clearOperationParams()
    {
        unset($this->operation_params);
    }

    /**
     * Generated from protobuf field <code>.Ydb.Operations.OperationParams operation_params = 1;</code>
     * @param \Ydb\Operations\OperationParams $var
     * @return $this
     */
    public function setOperationParams($var)
    {
        GPBUtil::checkMessage($var, \Ydb\Operations\OperationParams::class);
        $this->operation_params = $var;

        return $this;
    }

    /**
     * Path of a coordination node.
     *
     * Generated from protobuf field <code>string coordination_node_path = 2;</code>
     * @return string
     */
    public function getCoordinationNodePath()
    {
        return $this->coordination_node_path;
    }

    /**
     * Path of a coordination node.
     *
     * Generated from protobuf field <code>string coordination_node_path = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCoordinationNodePath($var)
    {
        GPBUtil::checkString($var, True);
        $this->coordination_node_path = $var;

        return $this;
    }

    /**
     * Path of resource inside a coordination node.
     *
     * Generated from protobuf field <code>string resource_path = 3;</code>
     * @return string
     */
    public function getResourcePath()
    {
        return $this->resource_path;
    }

    /**
     * Path of resource inside a coordination node.
     *
     * Generated from protobuf field <code>string resource_path = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setResourcePath($var)
    {
        GPBUtil::checkString($var, True);
        $this->resource_path = $var;

        return $this;
    }

    /**
     * Request resource's units for usage.
     *
     * Generated from protobuf field <code>uint64 required = 4;</code>
     * @return int|string
     */
    public function getRequired()
    {
        return $this->readOneof(4);
    }

    public function hasRequired()
    {
        return $this->hasOneof(4);
    }

    /**
     * Request resource's units for usage.
     *
     * Generated from protobuf field <code>uint64 required = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRequired($var)
    {
        GPBUtil::checkUint64($var);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Actually used resource's units by client.
     *
     * Generated from protobuf field <code>uint64 used = 5;</code>
     * @return int|string
     */
    public function getUsed()
    {
        return $this->readOneof(5);
    }

    public function hasUsed()
    {
        return $this->hasOneof(5);
    }

    /**
     * Actually used resource's units by client.
     *
     * Generated from protobuf field <code>uint64 used = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setUsed($var)
    {
        GPBUtil::checkUint64($var);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getUnits()
    {
        return $this->whichOneof("units");
    }

}

