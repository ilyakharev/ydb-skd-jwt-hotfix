<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_import.proto

namespace Ydb\Import\ImportFromS3Settings;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Ydb.Import.ImportFromS3Settings.Item</code>
 */
class Item extends \Google\Protobuf\Internal\Message
{
    /**
     * YDB tables in S3 are stored in one or more objects (see ydb_export.proto).
     *The object name begins with 'source_prefix'.
     *This prefix is followed by:
     * '/data_PartNumber', where 'PartNumber' represents the index of the part, starting at zero;
     * '/scheme.pb' - object with information about scheme, indexes, etc.
     *
     * Generated from protobuf field <code>string source_prefix = 1 [(.Ydb.required) = true];</code>
     */
    protected $source_prefix = '';
    /**
     * Database path to a table to import to.
     *
     * Generated from protobuf field <code>string destination_path = 2 [(.Ydb.required) = true];</code>
     */
    protected $destination_path = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $source_prefix
     *           YDB tables in S3 are stored in one or more objects (see ydb_export.proto).
     *          The object name begins with 'source_prefix'.
     *          This prefix is followed by:
     *           '/data_PartNumber', where 'PartNumber' represents the index of the part, starting at zero;
     *           '/scheme.pb' - object with information about scheme, indexes, etc.
     *     @type string $destination_path
     *           Database path to a table to import to.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbImport::initOnce();
        parent::__construct($data);
    }

    /**
     * YDB tables in S3 are stored in one or more objects (see ydb_export.proto).
     *The object name begins with 'source_prefix'.
     *This prefix is followed by:
     * '/data_PartNumber', where 'PartNumber' represents the index of the part, starting at zero;
     * '/scheme.pb' - object with information about scheme, indexes, etc.
     *
     * Generated from protobuf field <code>string source_prefix = 1 [(.Ydb.required) = true];</code>
     * @return string
     */
    public function getSourcePrefix()
    {
        return $this->source_prefix;
    }

    /**
     * YDB tables in S3 are stored in one or more objects (see ydb_export.proto).
     *The object name begins with 'source_prefix'.
     *This prefix is followed by:
     * '/data_PartNumber', where 'PartNumber' represents the index of the part, starting at zero;
     * '/scheme.pb' - object with information about scheme, indexes, etc.
     *
     * Generated from protobuf field <code>string source_prefix = 1 [(.Ydb.required) = true];</code>
     * @param string $var
     * @return $this
     */
    public function setSourcePrefix($var)
    {
        GPBUtil::checkString($var, True);
        $this->source_prefix = $var;

        return $this;
    }

    /**
     * Database path to a table to import to.
     *
     * Generated from protobuf field <code>string destination_path = 2 [(.Ydb.required) = true];</code>
     * @return string
     */
    public function getDestinationPath()
    {
        return $this->destination_path;
    }

    /**
     * Database path to a table to import to.
     *
     * Generated from protobuf field <code>string destination_path = 2 [(.Ydb.required) = true];</code>
     * @param string $var
     * @return $this
     */
    public function setDestinationPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->destination_path = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Item::class, \Ydb\Import\ImportFromS3Settings_Item::class);

