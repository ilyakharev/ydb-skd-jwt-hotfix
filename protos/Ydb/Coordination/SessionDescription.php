<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_coordination.proto

namespace Ydb\Coordination;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * Describes an active client session
 *
 * Generated from protobuf message <code>Ydb.Coordination.SessionDescription</code>
 */
class SessionDescription extends \Google\Protobuf\Internal\Message
{
    /**
     * Session id generated by the server
     *
     * Generated from protobuf field <code>uint64 session_id = 1;</code>
     */
    protected $session_id = 0;
    /**
     * Expiration timeout of the session
     *
     * Generated from protobuf field <code>uint64 timeout_millis = 2;</code>
     */
    protected $timeout_millis = 0;
    /**
     * User-specified description of this session
     *
     * Generated from protobuf field <code>string description = 3;</code>
     */
    protected $description = '';
    /**
     * True if this session is currently attached to a client
     *
     * Generated from protobuf field <code>bool attached = 4;</code>
     */
    protected $attached = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $session_id
     *           Session id generated by the server
     *     @type int|string $timeout_millis
     *           Expiration timeout of the session
     *     @type string $description
     *           User-specified description of this session
     *     @type bool $attached
     *           True if this session is currently attached to a client
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbCoordination::initOnce();
        parent::__construct($data);
    }

    /**
     * Session id generated by the server
     *
     * Generated from protobuf field <code>uint64 session_id = 1;</code>
     * @return int|string
     */
    public function getSessionId()
    {
        return $this->session_id;
    }

    /**
     * Session id generated by the server
     *
     * Generated from protobuf field <code>uint64 session_id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSessionId($var)
    {
        GPBUtil::checkUint64($var);
        $this->session_id = $var;

        return $this;
    }

    /**
     * Expiration timeout of the session
     *
     * Generated from protobuf field <code>uint64 timeout_millis = 2;</code>
     * @return int|string
     */
    public function getTimeoutMillis()
    {
        return $this->timeout_millis;
    }

    /**
     * Expiration timeout of the session
     *
     * Generated from protobuf field <code>uint64 timeout_millis = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimeoutMillis($var)
    {
        GPBUtil::checkUint64($var);
        $this->timeout_millis = $var;

        return $this;
    }

    /**
     * User-specified description of this session
     *
     * Generated from protobuf field <code>string description = 3;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * User-specified description of this session
     *
     * Generated from protobuf field <code>string description = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * True if this session is currently attached to a client
     *
     * Generated from protobuf field <code>bool attached = 4;</code>
     * @return bool
     */
    public function getAttached()
    {
        return $this->attached;
    }

    /**
     * True if this session is currently attached to a client
     *
     * Generated from protobuf field <code>bool attached = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setAttached($var)
    {
        GPBUtil::checkBool($var);
        $this->attached = $var;

        return $this;
    }

}

