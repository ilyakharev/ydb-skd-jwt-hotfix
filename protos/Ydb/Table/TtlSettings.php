<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_table.proto

namespace Ydb\Table;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Ydb.Table.TtlSettings</code>
 */
class TtlSettings extends \Google\Protobuf\Internal\Message
{
    /**
     * How often to run BRO on the same partition.
     * BRO will not be started more often, but may be started less often.
     *
     * Generated from protobuf field <code>uint32 run_interval_seconds = 3;</code>
     */
    protected $run_interval_seconds = 0;
    protected $mode;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Ydb\Table\DateTypeColumnModeSettings $date_type_column
     *     @type \Ydb\Table\ValueSinceUnixEpochModeSettings $value_since_unix_epoch
     *     @type int $run_interval_seconds
     *           How often to run BRO on the same partition.
     *           BRO will not be started more often, but may be started less often.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbTable::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.Ydb.Table.DateTypeColumnModeSettings date_type_column = 1;</code>
     * @return \Ydb\Table\DateTypeColumnModeSettings|null
     */
    public function getDateTypeColumn()
    {
        return $this->readOneof(1);
    }

    public function hasDateTypeColumn()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.Ydb.Table.DateTypeColumnModeSettings date_type_column = 1;</code>
     * @param \Ydb\Table\DateTypeColumnModeSettings $var
     * @return $this
     */
    public function setDateTypeColumn($var)
    {
        GPBUtil::checkMessage($var, \Ydb\Table\DateTypeColumnModeSettings::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Ydb.Table.ValueSinceUnixEpochModeSettings value_since_unix_epoch = 2;</code>
     * @return \Ydb\Table\ValueSinceUnixEpochModeSettings|null
     */
    public function getValueSinceUnixEpoch()
    {
        return $this->readOneof(2);
    }

    public function hasValueSinceUnixEpoch()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.Ydb.Table.ValueSinceUnixEpochModeSettings value_since_unix_epoch = 2;</code>
     * @param \Ydb\Table\ValueSinceUnixEpochModeSettings $var
     * @return $this
     */
    public function setValueSinceUnixEpoch($var)
    {
        GPBUtil::checkMessage($var, \Ydb\Table\ValueSinceUnixEpochModeSettings::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * How often to run BRO on the same partition.
     * BRO will not be started more often, but may be started less often.
     *
     * Generated from protobuf field <code>uint32 run_interval_seconds = 3;</code>
     * @return int
     */
    public function getRunIntervalSeconds()
    {
        return $this->run_interval_seconds;
    }

    /**
     * How often to run BRO on the same partition.
     * BRO will not be started more often, but may be started less often.
     *
     * Generated from protobuf field <code>uint32 run_interval_seconds = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setRunIntervalSeconds($var)
    {
        GPBUtil::checkUint32($var);
        $this->run_interval_seconds = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getMode()
    {
        return $this->whichOneof("mode");
    }

}

