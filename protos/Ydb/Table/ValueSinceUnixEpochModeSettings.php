<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_table.proto

namespace Ydb\Table;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Same as DateTypeColumnModeSettings (above), but useful when type of the
 * value stored in <column_name> is not a date type.
 *
 * Generated from protobuf message <code>Ydb.Table.ValueSinceUnixEpochModeSettings</code>
 */
class ValueSinceUnixEpochModeSettings extends \Google\Protobuf\Internal\Message
{
    /**
     * The column type must be one of:
     * - Uint32
     * - Uint64
     * - DyNumber
     *
     * Generated from protobuf field <code>string column_name = 1;</code>
     */
    protected $column_name = '';
    /**
     * Interpretation of the value stored in <column_name>
     *
     * Generated from protobuf field <code>.Ydb.Table.ValueSinceUnixEpochModeSettings.Unit column_unit = 2;</code>
     */
    protected $column_unit = 0;
    /**
     * This option is always interpreted as seconds regardless of the
     * <column_unit> value.
     *
     * Generated from protobuf field <code>uint32 expire_after_seconds = 3;</code>
     */
    protected $expire_after_seconds = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $column_name
     *           The column type must be one of:
     *           - Uint32
     *           - Uint64
     *           - DyNumber
     *     @type int $column_unit
     *           Interpretation of the value stored in <column_name>
     *     @type int $expire_after_seconds
     *           This option is always interpreted as seconds regardless of the
     *           <column_unit> value.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbTable::initOnce();
        parent::__construct($data);
    }

    /**
     * The column type must be one of:
     * - Uint32
     * - Uint64
     * - DyNumber
     *
     * Generated from protobuf field <code>string column_name = 1;</code>
     * @return string
     */
    public function getColumnName()
    {
        return $this->column_name;
    }

    /**
     * The column type must be one of:
     * - Uint32
     * - Uint64
     * - DyNumber
     *
     * Generated from protobuf field <code>string column_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setColumnName($var)
    {
        GPBUtil::checkString($var, True);
        $this->column_name = $var;

        return $this;
    }

    /**
     * Interpretation of the value stored in <column_name>
     *
     * Generated from protobuf field <code>.Ydb.Table.ValueSinceUnixEpochModeSettings.Unit column_unit = 2;</code>
     * @return int
     */
    public function getColumnUnit()
    {
        return $this->column_unit;
    }

    /**
     * Interpretation of the value stored in <column_name>
     *
     * Generated from protobuf field <code>.Ydb.Table.ValueSinceUnixEpochModeSettings.Unit column_unit = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setColumnUnit($var)
    {
        GPBUtil::checkEnum($var, \Ydb\Table\ValueSinceUnixEpochModeSettings\Unit::class);
        $this->column_unit = $var;

        return $this;
    }

    /**
     * This option is always interpreted as seconds regardless of the
     * <column_unit> value.
     *
     * Generated from protobuf field <code>uint32 expire_after_seconds = 3;</code>
     * @return int
     */
    public function getExpireAfterSeconds()
    {
        return $this->expire_after_seconds;
    }

    /**
     * This option is always interpreted as seconds regardless of the
     * <column_unit> value.
     *
     * Generated from protobuf field <code>uint32 expire_after_seconds = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setExpireAfterSeconds($var)
    {
        GPBUtil::checkUint32($var);
        $this->expire_after_seconds = $var;

        return $this;
    }

}

