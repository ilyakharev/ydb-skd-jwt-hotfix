<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_cms.proto

namespace Ydb\Cms;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A set of quotas for the database
 *
 * Generated from protobuf message <code>Ydb.Cms.DatabaseQuotas</code>
 */
class DatabaseQuotas extends \Google\Protobuf\Internal\Message
{
    /**
     * A maximum data size in bytes, new data will be rejected when exceeded
     *
     * Generated from protobuf field <code>uint64 data_size_hard_quota = 1;</code>
     */
    protected $data_size_hard_quota = 0;
    /**
     * An optional size in bytes (lower than data_size_hard_quota). When data
     * size becomes lower than this value new data ingestion is re-enabled
     * again. This is useful to help avoid database from rapidly entering and
     * exiting from the overloaded state.
     *
     * Generated from protobuf field <code>uint64 data_size_soft_quota = 2;</code>
     */
    protected $data_size_soft_quota = 0;
    /**
     * A maximum count of shards in all data streams.
     *
     * Generated from protobuf field <code>uint64 data_stream_shards_quota = 3;</code>
     */
    protected $data_stream_shards_quota = 0;
    /**
     * A maximum storage that will be reserved for all data stream shards.
     *
     * Generated from protobuf field <code>uint64 data_stream_reserved_storage_quota = 5;</code>
     */
    protected $data_stream_reserved_storage_quota = 0;
    /**
     * A minimum value of `TtlSettings.run_interval_seconds` that can be specified.
     * Default is 1800 (15 minutes).
     *
     * Generated from protobuf field <code>uint32 ttl_min_run_internal_seconds = 4;</code>
     */
    protected $ttl_min_run_internal_seconds = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $data_size_hard_quota
     *           A maximum data size in bytes, new data will be rejected when exceeded
     *     @type int|string $data_size_soft_quota
     *           An optional size in bytes (lower than data_size_hard_quota). When data
     *           size becomes lower than this value new data ingestion is re-enabled
     *           again. This is useful to help avoid database from rapidly entering and
     *           exiting from the overloaded state.
     *     @type int|string $data_stream_shards_quota
     *           A maximum count of shards in all data streams.
     *     @type int|string $data_stream_reserved_storage_quota
     *           A maximum storage that will be reserved for all data stream shards.
     *     @type int $ttl_min_run_internal_seconds
     *           A minimum value of `TtlSettings.run_interval_seconds` that can be specified.
     *           Default is 1800 (15 minutes).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbCms::initOnce();
        parent::__construct($data);
    }

    /**
     * A maximum data size in bytes, new data will be rejected when exceeded
     *
     * Generated from protobuf field <code>uint64 data_size_hard_quota = 1;</code>
     * @return int|string
     */
    public function getDataSizeHardQuota()
    {
        return $this->data_size_hard_quota;
    }

    /**
     * A maximum data size in bytes, new data will be rejected when exceeded
     *
     * Generated from protobuf field <code>uint64 data_size_hard_quota = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDataSizeHardQuota($var)
    {
        GPBUtil::checkUint64($var);
        $this->data_size_hard_quota = $var;

        return $this;
    }

    /**
     * An optional size in bytes (lower than data_size_hard_quota). When data
     * size becomes lower than this value new data ingestion is re-enabled
     * again. This is useful to help avoid database from rapidly entering and
     * exiting from the overloaded state.
     *
     * Generated from protobuf field <code>uint64 data_size_soft_quota = 2;</code>
     * @return int|string
     */
    public function getDataSizeSoftQuota()
    {
        return $this->data_size_soft_quota;
    }

    /**
     * An optional size in bytes (lower than data_size_hard_quota). When data
     * size becomes lower than this value new data ingestion is re-enabled
     * again. This is useful to help avoid database from rapidly entering and
     * exiting from the overloaded state.
     *
     * Generated from protobuf field <code>uint64 data_size_soft_quota = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDataSizeSoftQuota($var)
    {
        GPBUtil::checkUint64($var);
        $this->data_size_soft_quota = $var;

        return $this;
    }

    /**
     * A maximum count of shards in all data streams.
     *
     * Generated from protobuf field <code>uint64 data_stream_shards_quota = 3;</code>
     * @return int|string
     */
    public function getDataStreamShardsQuota()
    {
        return $this->data_stream_shards_quota;
    }

    /**
     * A maximum count of shards in all data streams.
     *
     * Generated from protobuf field <code>uint64 data_stream_shards_quota = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDataStreamShardsQuota($var)
    {
        GPBUtil::checkUint64($var);
        $this->data_stream_shards_quota = $var;

        return $this;
    }

    /**
     * A maximum storage that will be reserved for all data stream shards.
     *
     * Generated from protobuf field <code>uint64 data_stream_reserved_storage_quota = 5;</code>
     * @return int|string
     */
    public function getDataStreamReservedStorageQuota()
    {
        return $this->data_stream_reserved_storage_quota;
    }

    /**
     * A maximum storage that will be reserved for all data stream shards.
     *
     * Generated from protobuf field <code>uint64 data_stream_reserved_storage_quota = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDataStreamReservedStorageQuota($var)
    {
        GPBUtil::checkUint64($var);
        $this->data_stream_reserved_storage_quota = $var;

        return $this;
    }

    /**
     * A minimum value of `TtlSettings.run_interval_seconds` that can be specified.
     * Default is 1800 (15 minutes).
     *
     * Generated from protobuf field <code>uint32 ttl_min_run_internal_seconds = 4;</code>
     * @return int
     */
    public function getTtlMinRunInternalSeconds()
    {
        return $this->ttl_min_run_internal_seconds;
    }

    /**
     * A minimum value of `TtlSettings.run_interval_seconds` that can be specified.
     * Default is 1800 (15 minutes).
     *
     * Generated from protobuf field <code>uint32 ttl_min_run_internal_seconds = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setTtlMinRunInternalSeconds($var)
    {
        GPBUtil::checkUint32($var);
        $this->ttl_min_run_internal_seconds = $var;

        return $this;
    }

}

