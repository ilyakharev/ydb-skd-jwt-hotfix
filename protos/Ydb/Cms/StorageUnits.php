<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/ydb_cms.proto

namespace Ydb\Cms;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A set of uniform storage units.
 * Single storage unit can be thought of as a reserved part of a RAID.
 *
 * Generated from protobuf message <code>Ydb.Cms.StorageUnits</code>
 */
class StorageUnits extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Kind of the storage unit. Determine guarantees
     * for all main unit parameters: used hard disk type, capacity
     * throughput, IOPS etc.
     *
     * Generated from protobuf field <code>string unit_kind = 1;</code>
     */
    protected $unit_kind = '';
    /**
     * Required. The number of units in this set.
     *
     * Generated from protobuf field <code>uint64 count = 2;</code>
     */
    protected $count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $unit_kind
     *           Required. Kind of the storage unit. Determine guarantees
     *           for all main unit parameters: used hard disk type, capacity
     *           throughput, IOPS etc.
     *     @type int|string $count
     *           Required. The number of units in this set.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Protos\YdbCms::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Kind of the storage unit. Determine guarantees
     * for all main unit parameters: used hard disk type, capacity
     * throughput, IOPS etc.
     *
     * Generated from protobuf field <code>string unit_kind = 1;</code>
     * @return string
     */
    public function getUnitKind()
    {
        return $this->unit_kind;
    }

    /**
     * Required. Kind of the storage unit. Determine guarantees
     * for all main unit parameters: used hard disk type, capacity
     * throughput, IOPS etc.
     *
     * Generated from protobuf field <code>string unit_kind = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUnitKind($var)
    {
        GPBUtil::checkString($var, True);
        $this->unit_kind = $var;

        return $this;
    }

    /**
     * Required. The number of units in this set.
     *
     * Generated from protobuf field <code>uint64 count = 2;</code>
     * @return int|string
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * Required. The number of units in this set.
     *
     * Generated from protobuf field <code>uint64 count = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkUint64($var);
        $this->count = $var;

        return $this;
    }

}

